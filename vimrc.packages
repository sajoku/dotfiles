function! PackInit() abort
  packadd minpac
  if !exists('g:loaded_minpac')
    "minpac is not loaded.
    echomsg "MinPac not available on this system. Find me in vimrc.packages"
  else
    call minpac#init()
    call minpac#add('k-takata/minpac', {'type': 'opt'})
  
    call minpac#add('tpope/vim-fugitive')
    call minpac#add('tpope/vim-commentary')
    call minpac#add('tpope/vim-surround')
    call minpac#add('tpope/vim-unimpaired')
    call minpac#add('junegunn/vim-easy-align')
    call minpac#add('airblade/vim-gitgutter', {'branch': 'main' })
    call minpac#add('preservim/nerdtree')
    call minpac#add('nvim-tree/nvim-web-devicons')
    call minpac#add('echasnovski/mini.nvim')

    "syntax highlighting straight from nvim
    call minpac#add('nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'})
    call minpac#add('https://github.com/apple/pkl-neovim.git')
    call minpac#add("nvim-treesitter/nvim-treesitter-textobjects")
    call minpac#add("nvim-treesitter/nvim-treesitter-context")
    call minpac#add('RRethy/nvim-treesitter-endwise')
    call minpac#add('andymass/vim-matchup')
  
    call minpac#add('slim-template/vim-slim')
    call minpac#add('catppuccin/nvim', { 'name': 'catppuccin' })
    call minpac#add("rebelot/kanagawa.nvim")
  
    call minpac#add("SmiteshP/nvim-navic")
    call minpac#add("utilyre/barbecue.nvim")
  
    call minpac#add('mileszs/ack.vim')
    call minpac#add('junegunn/fzf')
    call minpac#add("ibhagwan/fzf-lua")

    "call minpac#add('junegunn/fzf.vim')
    " call minpac#add("nvim-telescope/telescope.nvim")
    " call minpac#add("nvim-telescope/telescope-fzf-native.nvim", {"do": "make"})

    call minpac#add("nvim-lua/plenary.nvim")
    "call minpac#add('roman/golden-ratio')
    call minpac#add("folke/todo-comments.nvim")

    " currently tryin out-->

    call minpac#add("folke/which-key.nvim")
    " <-

    " ->
    call minpac#add('rhysd/git-messenger.vim')
    call minpac#add('sindrets/diffview.nvim')
    "->Tests
    call minpac#add('vim-test/vim-test')
    "<- Tests
  
    "golang
    call minpac#add('fatih/vim-go')
  
    "LSP
    call minpac#add('neovim/nvim-lspconfig')
    call minpac#add('mfussenegger/nvim-lint')

    call minpac#add("nvimtools/none-ls.nvim")

    "LSP Autocompletion
    " call minpac#add('hrsh7th/cmp-nvim-lsp')
    " call minpac#add('hrsh7th/cmp-buffer')
    " call minpac#add('hrsh7th/cmp-path')
    " call minpac#add('hrsh7th/nvim-cmp')
    " call minpac#add('ray-x/cmp-treesitter')
  
    "Snippets
    " call minpac#add('L3MON4D3/LuaSnip', {'do': 'make install_jsregexp'} )
    " call minpac#add('saadparwaiz1/cmp_luasnip')
  
    call minpac#add('saghen/blink.cmp', {'rev': 'v1.0.0' })
    "Needed for blink apparently
    "call minpac#add('folke/noice.nvim')
    call minpac#add('rafamadriz/friendly-snippets')
    call minpac#add("mikavilpas/blink-ripgrep.nvim")


    call minpac#add('brenoprata10/nvim-highlight-colors')
    call minpac#add('themaxmarchuk/tailwindcss-colors.nvim')
    call minpac#add("luckasRanarison/tailwind-tools.nvim", {"name": "tailwind-tools"})
    "
    "->Python
    call minpac#add('nvie/vim-flake8')
    "<-Python
    "
    "-> Rails
    call minpac#add('tpope/vim-rails')
    "<- Rails
    "
    "->Ruby
    call minpac#add('tpope/vim-bundler')
    "<-Ruby
  
    ""<-- Auto formatting
    "call minpac#add('AndrewRadev/tagalong.vim', {'branch': 'main' })
    call minpac#add("windwp/nvim-ts-autotag")
    call minpac#add("windwp/nvim-autopairs")
    ""-->
  
    "handlebars - mustach
    call minpac#add('mustache/vim-mustache-handlebars')
  
    "Colors and theme related
    call minpac#add('nvim-lualine/lualine.nvim')
    call minpac#add('catppuccin/nvim', { 'name': 'catppuccin' })
    call minpac#add("lunacookies/vim-colors-xcode", {'branch': 'master' })
    call minpac#add( "rose-pine/neovim", {'name': "rose-pine"} )
    "tmux
    call minpac#add('christoomey/vim-tmux-navigator')
    call minpac#add('christoomey/vim-tmux-runner')
    call minpac#add('preservim/vimux')
    call minpac#add('f-person/auto-dark-mode.nvim')
  
  endif
endfunction
