# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

set -g default-command "zsh"
set -g default-shell /bin/zsh

# 1 based index (instead of 0) to navigate windows
set -g base-index 1
set-option -g renumber-windows on
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Make Vim responsive to esc
set-option -s escape-time 0

#Mouse mode
set -g mouse on

set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -g terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Keep plenty of history for scrollback
set -g history-limit 10000

# vim emulation is not optimal. use emacs which gives more regular terminal like key commands
set-option -g status-keys "emacs"

# Show times longer than supposed
set -g display-panes-time 350

# tmux messages are displayed for x seconds
set -g display-time 1500

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

setw -g automatic-rename on

source-file ~/dotfiles/tmux/light_status.conf
# reload the .tmux conf file
bind r source-file ~/.tmux.conf \; source-file ~/dotfiles/tmux/light_status.conf \;  display "Reloaded tmux configuration";

set -g status-right-length 40
set -g status-right "#[fg=colour6][#{cpu_percentage}] %d %b %R #[fg=colour5]#(~/dotfiles/bin/battery Discharging)#[fg=colour6]#(~/dotfiles/bin/battery Charging) "

set -g status-left-length 40
set -g status-left ''

set -g window-status-format "#I #W"
set -g status-justify "centre"

#Enable focus events, windows throw an event if they gain focus
set -g focus-events on

# split window with sane defaults starting in the current path
bind \\ split-window -p 40 -h -c "#{pane_current_path}"
bind - split-window -p 20 -v -c "#{pane_current_path}"

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# open new window ctrl-s c and start in the current path
bind c new-window -c '#{pane_current_path}'

# choose nerdtree like between session and windows -s hide the sessions
bind-key C-j choose-tree -s

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy'


bind-key h split-window -h "htop"

# Open a new pane and tail dev log
#bind-key l split-window -h "tail -f  log/development.log"

# Break out a session
bind-key b break-pane -d
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill session but stay in tmux with ctrl-k
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Easily move windows from left to right with ctrl+shift+(left|right)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Plugins
set -g @tpm_plugins 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
