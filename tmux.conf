# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-stmux
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

set -g default-command "fish"
set -g default-shell /opt/homebrew/bin/fish

# 1 based index (instead of 0) to navigate windows
set -g base-index 1
set-option -g renumber-windows on
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi
#Mouse mode
set -g mouse on

# Make Vim responsive to esc
set-option -s escape-time 0

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

#set up better color support
#set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -g default-terminal "tmux-256color"

set-option -gas terminal-overrides "*:Tc" # true color support
#set-option -gas terminal-overrides "*:RGB" # true color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Keep plenty of history for scrollback
set -g history-limit 50000

# vim emulation is not optimal. use emacs which gives more regular terminal like key commands
set-option -g status-keys "emacs"

# Show times longer than supposed
set -g display-panes-time 350

# tmux messages are displayed for x seconds
set -g display-time 1500

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# reload the .tmux conf file
bind r source-file ~/.tmux.conf \; display "Reload tmux configuration";

# set the flavor
# Options to make tmux more pleasant
set -g mouse on

set -g @rose_pine_variant 'main' # Options are 'main', 'moon' or 'dawn'

set -g @rose_pine_host 'on' # Enables hostname in the status bar
set -g @rose_pine_date_time '' # It accepts the date UNIX command format (man date for info)
set -g @rose_pine_user 'on' # Turn on the username component in the statusbar
set -g @rose_pine_directory 'on' # Turn on the current folder component in the status bar
set -g @rose_pine_bar_bg_disable 'on' # Disables background color, for transparent terminal emulators
set -g @rose_pine_bar_bg_disabled_color_option 'default'

set -g @rose_pine_default_window_behavior 'on' # Forces tmux default window list behaviour
set -g @rose_pine_show_current_program 'on' # Forces tmux to show the current running program as window name
set -g @rose_pine_show_pane_directory 'on' # Forces tmux to show the current directory as window name

# These are not padded
set -g @rose_pine_session_icon '' # Changes the default icon to the left of the session name
set -g @rose_pine_current_window_icon '' # Changes the default icon to the left of the active window name
set -g @rose_pine_folder_icon '' # Changes the default icon to the left of the current directory folder
set -g @rose_pine_username_icon '' # Changes the default icon to the right of the hostname
set -g @rose_pine_hostname_icon '󰒋' # Changes the default icon to the right of the hostname
set -g @rose_pine_date_time_icon '󰃰' # Changes the default icon to the right of the date module
set -g @rose_pine_window_status_separator "" # Changes the default icon that appears between window names

# Very beta and specific opt-in settings, tested on v3.2a, look at issue #10
#set -g @rose_pine_prioritize_windows 'on' # Disables the right side functionality in a certain window count / terminal width
set -g @rose_pine_width_to_hide '80' # Specify a terminal width to toggle off most of the right side functionality
set -g @rose_pine_window_count '5' # Specify a number of windows, if there are more than the number, do the same as width_to_hide
set-window-option -g status-position top

#Enable focus events, windows throw an event if they gain focus
set -g focus-events on

# split window with sane defaults starting in the current path
bind \\ split-window -l 40% -h -c "#{pane_current_path}"
bind - split-window -l 20% -v -c "#{pane_current_path}"

#popup?
bind C-d popup -d "~/dotfiles/" -xC -yC -w80% -h80% -E "nvim"

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# open new window ctrl-s c an start in the current path
bind c new-window -c '#{pane_current_path}'

# choose nerdtree like between session and windows -s hide the sessions
bind-key C-j choose-tree -s

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy'

# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""


bind-key h split-window -h "htop"

# Open a new pane and tail dev log
#bind-key l split-window -h "tail -f  log/development.log"

# Break out a session
bind-key b break-pane -d
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill session but stay in tmux with ctrl-k
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Easily move windows from left to right with ctrl+shift+(left|right)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'rose-pine/tmux'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
# ...alongside

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
